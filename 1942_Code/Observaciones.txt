Observaciones:

*Cuando va hacia la derecha o izquierda, se da una animcación
si va hacia arriba o abajo, no cambia. 

*¿Definir el comportamiento de los aviones para cada tipo de animación? 
Creo que siempre se repiten, tanto en animación como en posición donde aparecen.

*Cuando el enemigo esté cercas del jugador, cargar la animación de regreso y la dirección


https://www.youtube.com/watch?v=Em7UwOOBvlA&t=224
Movimientos circulares
7:11 

8:40 movimientos raros

pueden haber distapros horizontales

también disparos en 3 direciones  diagonales
puedes esquivar aviones usando el retroceso, dado por la R de abajo:
https://www.youtube.com/watch?v=PtMBGfEPVNM en el minuto 1:30

Puedo usar la Q para eso



//rb.AddForce(Vector2.down * 20.0f);                                                    //mover solo hacia una dirección                    
//transform.position = Vector2.MoveTowards(transform.position, target.position, speed); //Seguir al target





//Debug.Log ("Nombre de la Colision: "+ collision.gameObject.tag);
//Debug.Log ("Nombre del padre :"+ this.transform.parent.name);



Para las Animaciones
        vDirection =  transform.position - target.position;  

       
        if(vDirection.x>0){
            if(animator.GetInteger("Direction") == 4){
                animator.SetInteger("Direction",5); 
            }else{
                animator.SetInteger("Direction",2); 
            }
        }else{
            if(animator.GetInteger("Direction") == 2){
                animator.SetInteger("Direction",3);
            }else{
                animator.SetInteger("Direction",4);
            }    
        }

        if(target2.GetInteger("Direction") == 1 && animation){
                animator.SetInteger("Direction",2); 
                StartCoroutine(WaitTimeAnimation());
        }else if((target2.GetInteger("Direction") == 2 || target2.GetInteger("Direction") == 5) && animation){
                animator.SetInteger("Direction",3); 
                StartCoroutine(WaitTimeAnimation());
        }else if(target2.GetInteger("Direction") == 3 && animation){
                animator.SetInteger("Direction",4); 
                StartCoroutine(WaitTimeAnimation());
        }else if((target2.GetInteger("Direction") == 4 || target2.GetInteger("Direction") == 5) && animation){
                animator.SetInteger("Direction",5); 
                StartCoroutine(WaitTimeAnimation());
        }*/